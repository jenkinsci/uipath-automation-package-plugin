<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>plugin</artifactId>
        <version>4.44</version>
        <relativePath />
    </parent>

    <artifactId>uipath-automation-package</artifactId>
    <version>2.10-SNAPSHOT</version>
    <packaging>hpi</packaging>

    <properties>
        <jenkins.version>2.357</jenkins.version>
        <powershell.version>1.7</powershell.version>
        <envinject.version>2.4.0</envinject.version>
        <mockito-core.version>4.8.0</mockito-core.version>
        <plain-credentials.version>1.8</plain-credentials.version>
        <json.version>20220320</json.version>
        <credentials.version>2.6.1.1</credentials.version>
        <org.jenkins-ci.plugins.junit.version>1.63</org.jenkins-ci.plugins.junit.version>
        <JUnitParams.version>1.1.1</JUnitParams.version>
        <matrix-project.version>1.20</matrix-project.version>
        <native2ascii-maven-plugin.version>2.0.1</native2ascii-maven-plugin.version>
        <properties-maven-plugin.version>1.1.0</properties-maven-plugin.version>
        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
        <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.2.0</maven-checkstyle-plugin.version>
        <symbol-annotation.version>1.23</symbol-annotation.version>
        <junit.junit.version>4.13.2</junit.junit.version>
    </properties>

    <name>UiPath Plugin</name>
    <description>
        This plugin allows you to build and deploy UiPath automation processes.
    </description>
    <url>https://github.com/jenkinsci/uipath-automation-package-plugin</url>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native2ascii-maven-plugin</artifactId>
                <version>${native2ascii-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>utf8-to-latin1</id>
                        <goals>
                            <goal>resources</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <srcDir>src/main/resources</srcDir>
                            <targetDir>${project.build.outputDirectory}</targetDir>
                            <includes>
                                <include>**/*.properties</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <detectJavaApiLink>false</detectJavaApiLink>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>${properties-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>src/main/resources/config.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                <executions>
                    <execution>
                        <id>Generate help files</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <exec executable="powershell.exe">
                                    <arg value=".\GenerateHelpFiles.ps1 " />
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>ImportModule</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="Downloading the CLI" />
                                <mkdir dir="${java.io.tmpdir}/${UiPath.CLI.Name}/${UiPath.CLI.Version}" />
                                <get dest="${java.io.tmpdir}/${UiPath.CLI.Name}/${UiPath.CLI.Version}"
                                     src="https://uipath.pkgs.visualstudio.com/Public.Feeds/_packaging/UiPath-Official/nuget/v3/flat2/UiPath.CLI/${UiPath.CLI.Version}/UiPath.CLI.${UiPath.CLI.Version}.nupkg"
                                     skipexisting="true"/>
                                <unzip src="${java.io.tmpdir}/${UiPath.CLI.Name}/${UiPath.CLI.Version}/UiPath.CLI.${UiPath.CLI.Version}.nupkg"
                                       dest="${project.build.directory}/classes/cli-${UiPath.CLI.Version}" />
                            </target>
                            <failOnError>true</failOnError>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <goals>deploy</goals>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <!-- The default licence for Jenkins OSS Plugins is MIT.-->
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:ssh://git@github.com/jenkinsci/uipath-automation-package-plugin.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/jenkinsci/uipath-automation-package-plugin.git</developerConnection>
        <url>https://github.com/jenkinsci/uipath-automation-package-plugin</url>
        <tag>HEAD</tag>
    </scm>
    <!-- List of dependencies of the project. -->
    <dependencies>
        <!-- This explicit dependency is added because the older version
            which gets added by parent pom has the vulnerability -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.32</version>
        </dependency>
        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
            <version>${JUnitParams.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>junit</artifactId>
            <version>${org.jenkins-ci.plugins.junit.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jenkins-ci.plugins</groupId>
                    <artifactId>structs</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>credentials</artifactId>
            <version>${credentials.version}</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${json.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>plain-credentials</artifactId>
            <version>${plain-credentials.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito-core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>powershell</artifactId>
            <version>${powershell.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>envinject</artifactId>
            <version>${envinject.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jenkins-ci</groupId>
                <artifactId>symbol-annotation</artifactId>
                <version>${symbol-annotation.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
        <repository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </pluginRepository>
    </pluginRepositories>
    <!--
      The developers show up as current maintainers in the Jenkins wiki.
      https://wiki.jenkins.io/display/JENKINS/UiPath+Plugin
      The id should be the jenkinsci.org username and not your GitHub username.
    -->
    <developers>
        <developer>
            <id>ganeshborle</id>
            <name>Ganesh Borle</name>
            <url>https://github.com/ganeshborle</url>
            <email>ganesh.borle@uipath.com</email>
            <roles>
                <role>maintainer</role>
            </roles>
        </developer>
    </developers>
</project>